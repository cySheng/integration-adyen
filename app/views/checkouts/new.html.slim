header
  h1 Adyen Checkout

main
  section#product
    table
      tr
        th Product
        th Quantity
        th Price
      tbody
        tr
          td Glasses
          td 1
          td SGD 100.00
        tr
          td Poster
          td 1
          td SGD 20.00

  section#dropin



javascript:
  document.addEventListener("turbolinks:load", function () {
    const configuration = {
      locale: "en-US",
      environment: "test",
      originKey: "#{ENV['ORIGIN_KEY']}",
      paymentMethodsResponse: #{ raw @payment_methods_response.to_json }
    };

    const checkout = new AdyenCheckout(configuration);


    const makePayment = (data) => {
      return new Promise((resolve, reject) => {
        let csrfToken = document.head.querySelector("[name~=csrf-token][content]").content

        fetch('/checkouts', {
          method: 'POST',
          body: JSON.stringify(data),
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': csrfToken,
            'Accept': 'application/json'
          }
        })
          .then((response) => {
            console.log('/checkouts Response Return')
            resolve(response.json())
          })
      })
    }

    const makeDetailsCall = (data) => {
      return new Promise((resolve, reject) => {
        let csrfToken = document.head.querySelector("[name~=csrf-token][content]").content

        fetch('/checkouts/details', {
          method: 'POST',
          body: JSON.stringify(data),
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': csrfToken,
            'Accept': 'application/json'
          }
        }).then((response) => {
          console.log('/checkout/details Response Return')
          resolve(response.json())
        })
      })
    }

    const dropin = checkout
      .create('dropin', {
        paymentMethodsConfiguration: {
          card: { // Example optional configuration for Cards
            hasHolderName: true,
            holderNameRequired: true,
            enableStoreDetails: true,
            hideCVC: false, // Change this to true to hide the CVC field for stored cards
            name: 'Credit or debit card',
            amount: {
              value: 10000,
              currency: "EUR"
            }
          }
        },
        onSubmit: (state, dropin) => {
          makePayment(state.data)
            .then(action => {
              dropin.handleAction(action);
            })
            .catch(error => {
              // window.location.replace("#{ error_checkouts_path }?error=" + error)
              throw Error(error);
            });
        },
        onAdditionalDetails: (state, dropin) => {
          makeDetailsCall(state.data)
            .then(action => {
              dropin.handleAction(action);
            })
            .catch(error => {
              window.location.replace("#{ error_checkouts_path }?error=" + error)
              // throw Error(error);
            });
        }
      })
      .mount('#dropin');
  })
